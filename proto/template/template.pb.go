// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/template/template.proto

package templates

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListQuery struct {
	Limit                int64    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Sort                 string   `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	Label                string   `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListQuery) Reset()         { *m = ListQuery{} }
func (m *ListQuery) String() string { return proto.CompactTextString(m) }
func (*ListQuery) ProtoMessage()    {}
func (*ListQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f24d5d346a033e9, []int{0}
}

func (m *ListQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListQuery.Unmarshal(m, b)
}
func (m *ListQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListQuery.Marshal(b, m, deterministic)
}
func (m *ListQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListQuery.Merge(m, src)
}
func (m *ListQuery) XXX_Size() int {
	return xxx_messageInfo_ListQuery.Size(m)
}
func (m *ListQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_ListQuery.DiscardUnknown(m)
}

var xxx_messageInfo_ListQuery proto.InternalMessageInfo

func (m *ListQuery) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListQuery) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListQuery) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *ListQuery) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *ListQuery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Template struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Event                string   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type                 []string `protobuf:"bytes,4,rep,name=type,proto3" json:"type,omitempty"`
	TemplateCode         string   `protobuf:"bytes,5,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
	TemplateValue        string   `protobuf:"bytes,6,opt,name=templateValue,proto3" json:"templateValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Template) Reset()         { *m = Template{} }
func (m *Template) String() string { return proto.CompactTextString(m) }
func (*Template) ProtoMessage()    {}
func (*Template) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f24d5d346a033e9, []int{1}
}

func (m *Template) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Template.Unmarshal(m, b)
}
func (m *Template) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Template.Marshal(b, m, deterministic)
}
func (m *Template) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Template.Merge(m, src)
}
func (m *Template) XXX_Size() int {
	return xxx_messageInfo_Template.Size(m)
}
func (m *Template) XXX_DiscardUnknown() {
	xxx_messageInfo_Template.DiscardUnknown(m)
}

var xxx_messageInfo_Template proto.InternalMessageInfo

func (m *Template) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Template) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *Template) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Template) GetType() []string {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Template) GetTemplateCode() string {
	if m != nil {
		return m.TemplateCode
	}
	return ""
}

func (m *Template) GetTemplateValue() string {
	if m != nil {
		return m.TemplateValue
	}
	return ""
}

type Response struct {
	Template             *Template   `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	Templates            []*Template `protobuf:"bytes,2,rep,name=templates,proto3" json:"templates,omitempty"`
	Total                int64       `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Valid                bool        `protobuf:"varint,4,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f24d5d346a033e9, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetTemplate() *Template {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *Response) GetTemplates() []*Template {
	if m != nil {
		return m.Templates
	}
	return nil
}

func (m *Response) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Response) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*ListQuery)(nil), "templates.ListQuery")
	proto.RegisterType((*Template)(nil), "templates.Template")
	proto.RegisterType((*Response)(nil), "templates.Response")
}

func init() { proto.RegisterFile("proto/template/template.proto", fileDescriptor_8f24d5d346a033e9) }

var fileDescriptor_8f24d5d346a033e9 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x41, 0x6b, 0xf2, 0x40,
	0x10, 0xfd, 0x92, 0x8d, 0x92, 0xcc, 0xd7, 0xf6, 0x30, 0xf5, 0xb0, 0x14, 0x0a, 0x21, 0xf4, 0xe0,
	0x49, 0x51, 0xfb, 0x0f, 0x2c, 0xf4, 0xd2, 0x4b, 0x17, 0xdb, 0xfb, 0x4a, 0x86, 0x12, 0x58, 0x4d,
	0x48, 0x56, 0xc1, 0x1f, 0xd2, 0x4b, 0x8f, 0xfd, 0xa5, 0x65, 0x27, 0x6e, 0x54, 0xa8, 0x07, 0x7b,
	0x9b, 0xf7, 0x32, 0x6f, 0xde, 0xbc, 0xd9, 0xc0, 0x7d, 0x55, 0x97, 0xb6, 0x1c, 0x5b, 0x5a, 0x55,
	0x46, 0x5b, 0xea, 0x8a, 0x11, 0xf3, 0x98, 0x78, 0xdc, 0x64, 0x0d, 0x24, 0x2f, 0x45, 0x63, 0x5f,
	0x37, 0x54, 0xef, 0x70, 0x00, 0x3d, 0x53, 0xac, 0x0a, 0x2b, 0x83, 0x34, 0x18, 0x0a, 0xd5, 0x02,
	0x44, 0x88, 0x2a, 0xfd, 0x41, 0x32, 0x64, 0x92, 0x6b, 0xc7, 0x35, 0x65, 0x6d, 0xa5, 0x48, 0x83,
	0x61, 0xa2, 0xb8, 0x66, 0xb5, 0x5e, 0x92, 0x91, 0x11, 0x93, 0x2d, 0x70, 0x9d, 0x6b, 0xbd, 0x22,
	0xd9, 0x6b, 0x3b, 0x5d, 0x9d, 0x7d, 0x07, 0x10, 0x2f, 0xf6, 0x2b, 0xe0, 0x0d, 0x84, 0x45, 0xbe,
	0x77, 0x0c, 0x8b, 0xdc, 0x8d, 0xa1, 0x2d, 0xad, 0x2d, 0xfb, 0x25, 0xaa, 0x05, 0xdd, 0x18, 0x71,
	0x18, 0xe3, 0x38, 0xbb, 0xab, 0x48, 0x46, 0xa9, 0x70, 0x9c, 0xab, 0x31, 0x83, 0x2b, 0x1f, 0x6e,
	0x5e, 0xe6, 0xde, 0xf6, 0x84, 0xc3, 0x07, 0xb8, 0xf6, 0xf8, 0x5d, 0x9b, 0x0d, 0xc9, 0x3e, 0x37,
	0x9d, 0x92, 0xd9, 0x57, 0x00, 0xb1, 0xa2, 0xa6, 0x2a, 0xd7, 0x0d, 0xe1, 0x18, 0x62, 0xff, 0x95,
	0x57, 0xfd, 0x3f, 0xbd, 0x1d, 0x75, 0x47, 0x1c, 0xf9, 0x2c, 0xaa, 0x6b, 0xc2, 0x09, 0x1c, 0x8e,
	0x2c, 0xc3, 0x54, 0x9c, 0x53, 0x1c, 0xba, 0x5c, 0x70, 0x5b, 0x5a, 0x6d, 0x38, 0xa3, 0x50, 0x2d,
	0x70, 0xec, 0x56, 0x9b, 0x22, 0xe7, 0xab, 0xc6, 0xaa, 0x05, 0xd3, 0xcf, 0x10, 0x92, 0x45, 0xa7,
	0x9c, 0x41, 0xe4, 0x1e, 0x11, 0x07, 0x47, 0x0e, 0xdd, 0xab, 0xde, 0x1d, 0xfb, 0xfa, 0x40, 0xd9,
	0x3f, 0x9c, 0x80, 0x78, 0x26, 0x8b, 0xbf, 0x6d, 0x75, 0x4e, 0xf2, 0x08, 0xfd, 0x79, 0x4d, 0x2e,
	0xde, 0x85, 0xaa, 0xb7, 0x2a, 0xff, 0x83, 0xea, 0x89, 0x0c, 0x5d, 0xa6, 0x5a, 0xf6, 0xf9, 0x07,
	0x9f, 0xfd, 0x04, 0x00, 0x00, 0xff, 0xff, 0xba, 0x7d, 0x3d, 0x33, 0x01, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Templates service

type TemplatesClient interface {
	// 获取权限列表
	List(ctx context.Context, in *ListQuery, opts ...client.CallOption) (*Response, error)
	// 根据 唯一 获取模板
	Get(ctx context.Context, in *Template, opts ...client.CallOption) (*Response, error)
	// 创建模板
	Create(ctx context.Context, in *Template, opts ...client.CallOption) (*Response, error)
	// 更新模板
	Update(ctx context.Context, in *Template, opts ...client.CallOption) (*Response, error)
	// 删除模板
	Delete(ctx context.Context, in *Template, opts ...client.CallOption) (*Response, error)
}

type templatesClient struct {
	c           client.Client
	serviceName string
}

func NewTemplatesClient(serviceName string, c client.Client) TemplatesClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "templates"
	}
	return &templatesClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *templatesClient) List(ctx context.Context, in *ListQuery, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Templates.List", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templatesClient) Get(ctx context.Context, in *Template, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Templates.Get", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templatesClient) Create(ctx context.Context, in *Template, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Templates.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templatesClient) Update(ctx context.Context, in *Template, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Templates.Update", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templatesClient) Delete(ctx context.Context, in *Template, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Templates.Delete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Templates service

type TemplatesHandler interface {
	// 获取权限列表
	List(context.Context, *ListQuery, *Response) error
	// 根据 唯一 获取模板
	Get(context.Context, *Template, *Response) error
	// 创建模板
	Create(context.Context, *Template, *Response) error
	// 更新模板
	Update(context.Context, *Template, *Response) error
	// 删除模板
	Delete(context.Context, *Template, *Response) error
}

func RegisterTemplatesHandler(s server.Server, hdlr TemplatesHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Templates{hdlr}, opts...))
}

type Templates struct {
	TemplatesHandler
}

func (h *Templates) List(ctx context.Context, in *ListQuery, out *Response) error {
	return h.TemplatesHandler.List(ctx, in, out)
}

func (h *Templates) Get(ctx context.Context, in *Template, out *Response) error {
	return h.TemplatesHandler.Get(ctx, in, out)
}

func (h *Templates) Create(ctx context.Context, in *Template, out *Response) error {
	return h.TemplatesHandler.Create(ctx, in, out)
}

func (h *Templates) Update(ctx context.Context, in *Template, out *Response) error {
	return h.TemplatesHandler.Update(ctx, in, out)
}

func (h *Templates) Delete(ctx context.Context, in *Template, out *Response) error {
	return h.TemplatesHandler.Delete(ctx, in, out)
}
