// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/nats/nats.proto

package nats

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListQuery struct {
	Limit                int64    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Sort                 string   `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	Label                string   `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListQuery) Reset()         { *m = ListQuery{} }
func (m *ListQuery) String() string { return proto.CompactTextString(m) }
func (*ListQuery) ProtoMessage()    {}
func (*ListQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_86369f7f3ad51865, []int{0}
}

func (m *ListQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListQuery.Unmarshal(m, b)
}
func (m *ListQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListQuery.Marshal(b, m, deterministic)
}
func (m *ListQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListQuery.Merge(m, src)
}
func (m *ListQuery) XXX_Size() int {
	return xxx_messageInfo_ListQuery.Size(m)
}
func (m *ListQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_ListQuery.DiscardUnknown(m)
}

var xxx_messageInfo_ListQuery proto.InternalMessageInfo

func (m *ListQuery) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListQuery) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListQuery) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *ListQuery) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *ListQuery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Nat struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TemplateCode         string   `protobuf:"bytes,2,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
	TemplateValue        string   `protobuf:"bytes,3,opt,name=templateValue,proto3" json:"templateValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nat) Reset()         { *m = Nat{} }
func (m *Nat) String() string { return proto.CompactTextString(m) }
func (*Nat) ProtoMessage()    {}
func (*Nat) Descriptor() ([]byte, []int) {
	return fileDescriptor_86369f7f3ad51865, []int{1}
}

func (m *Nat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nat.Unmarshal(m, b)
}
func (m *Nat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nat.Marshal(b, m, deterministic)
}
func (m *Nat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nat.Merge(m, src)
}
func (m *Nat) XXX_Size() int {
	return xxx_messageInfo_Nat.Size(m)
}
func (m *Nat) XXX_DiscardUnknown() {
	xxx_messageInfo_Nat.DiscardUnknown(m)
}

var xxx_messageInfo_Nat proto.InternalMessageInfo

func (m *Nat) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Nat) GetTemplateCode() string {
	if m != nil {
		return m.TemplateCode
	}
	return ""
}

func (m *Nat) GetTemplateValue() string {
	if m != nil {
		return m.TemplateValue
	}
	return ""
}

type Request struct {
	// 驱动
	Driver string `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	// 调用的方法
	ApiName string `protobuf:"bytes,2,opt,name=apiName,proto3" json:"apiName,omitempty"`
	// 消息方法 一般会自动一个默然模板 也可以后台设置默然模板
	TemplateCode string `protobuf:"bytes,3,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
	// 消息参数 验证码 rul 等参数
	QueryParams          map[string]string `protobuf:"bytes,4,rep,name=queryParams,proto3" json:"queryParams,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_86369f7f3ad51865, []int{2}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *Request) GetApiName() string {
	if m != nil {
		return m.ApiName
	}
	return ""
}

func (m *Request) GetTemplateCode() string {
	if m != nil {
		return m.TemplateCode
	}
	return ""
}

func (m *Request) GetQueryParams() map[string]string {
	if m != nil {
		return m.QueryParams
	}
	return nil
}

type Response struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_86369f7f3ad51865, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*ListQuery)(nil), "nats.ListQuery")
	proto.RegisterType((*Nat)(nil), "nats.nat")
	proto.RegisterType((*Request)(nil), "nats.Request")
	proto.RegisterMapType((map[string]string)(nil), "nats.Request.QueryParamsEntry")
	proto.RegisterType((*Response)(nil), "nats.Response")
}

func init() { proto.RegisterFile("proto/nats/nats.proto", fileDescriptor_86369f7f3ad51865) }

var fileDescriptor_86369f7f3ad51865 = []byte{
	// 379 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x35, 0x4d, 0xfa, 0x91, 0xa9, 0xd5, 0xb2, 0x54, 0x09, 0x3d, 0x48, 0x08, 0x0a, 0xf5, 0x52,
	0xa1, 0x1e, 0x14, 0x0f, 0x22, 0x54, 0xf1, 0x22, 0xa5, 0x0d, 0xe8, 0x7d, 0xdb, 0x0c, 0x12, 0x4c,
	0xb2, 0xe9, 0xee, 0xb6, 0xd0, 0xb3, 0xbf, 0xd4, 0x7f, 0x22, 0xbb, 0x9b, 0xb4, 0x56, 0x0b, 0xf5,
	0x12, 0xde, 0x7b, 0xf3, 0x66, 0xe7, 0x65, 0x18, 0x38, 0xc9, 0x39, 0x93, 0xec, 0x2a, 0xa3, 0x52,
	0xe8, 0x4f, 0x5f, 0x73, 0xe2, 0x28, 0x1c, 0x08, 0x70, 0x5f, 0x62, 0x21, 0x27, 0x0b, 0xe4, 0x2b,
	0xd2, 0x81, 0x6a, 0x12, 0xa7, 0xb1, 0xf4, 0x2c, 0xdf, 0xea, 0xd9, 0xa1, 0x21, 0x84, 0x80, 0x93,
	0xd3, 0x77, 0xf4, 0x2a, 0x5a, 0xd4, 0x58, 0x69, 0x82, 0x71, 0xe9, 0xd9, 0xbe, 0xd5, 0x73, 0x43,
	0x8d, 0x75, 0x37, 0x9d, 0x62, 0xe2, 0x39, 0x5a, 0x34, 0x44, 0x39, 0x33, 0x9a, 0xa2, 0x57, 0x35,
	0x4e, 0x85, 0x83, 0x19, 0xd8, 0x19, 0x95, 0xeb, 0x92, 0xb5, 0x29, 0x91, 0x00, 0x0e, 0x25, 0xa6,
	0x79, 0x42, 0x25, 0x0e, 0x59, 0x64, 0x86, 0xba, 0xe1, 0x96, 0x46, 0xce, 0xa1, 0x55, 0xf2, 0x37,
	0x9a, 0x2c, 0xb0, 0x48, 0xb1, 0x2d, 0x06, 0x5f, 0x16, 0xd4, 0x43, 0x9c, 0x2f, 0x50, 0x48, 0x72,
	0x0a, 0xb5, 0x88, 0xc7, 0x4b, 0xe4, 0xc5, 0xac, 0x82, 0x11, 0x0f, 0xea, 0x34, 0x8f, 0x47, 0x2a,
	0x84, 0x19, 0x54, 0xd2, 0x3f, 0x39, 0xec, 0x1d, 0x39, 0x1e, 0xa0, 0x39, 0x57, 0x7b, 0x1b, 0x53,
	0x4e, 0x53, 0xe1, 0x39, 0xbe, 0xdd, 0x6b, 0x0e, 0xce, 0xfa, 0x7a, 0xc7, 0xc5, 0xe4, 0xfe, 0x64,
	0x63, 0x78, 0xca, 0x24, 0x5f, 0x85, 0x3f, 0x5b, 0xba, 0xf7, 0xd0, 0xfe, 0x6d, 0x20, 0x6d, 0xb0,
	0x3f, 0x70, 0x55, 0x04, 0x55, 0x50, 0x2d, 0x76, 0xa9, 0xff, 0xd3, 0x64, 0x34, 0xe4, 0xae, 0x72,
	0x6b, 0x05, 0x3e, 0x34, 0x42, 0x14, 0x39, 0xcb, 0x04, 0x16, 0xae, 0x38, 0xd2, 0x9d, 0x8d, 0xd0,
	0x90, 0xc1, 0x67, 0x05, 0x9c, 0x11, 0x95, 0x82, 0xdc, 0x40, 0x67, 0xcc, 0xd9, 0x0c, 0x85, 0x18,
	0xb2, 0x34, 0x65, 0x59, 0xb9, 0x9a, 0xd6, 0x56, 0xde, 0xee, 0x51, 0x49, 0xcd, 0xab, 0xc1, 0x01,
	0xb9, 0x04, 0x47, 0x5d, 0x08, 0x39, 0x36, 0x95, 0xf5, 0xb5, 0xec, 0xb0, 0x06, 0x60, 0x3f, 0xa3,
	0x24, 0xae, 0x29, 0x64, 0x74, 0xd7, 0x73, 0x17, 0x50, 0x1b, 0x72, 0xa4, 0x12, 0xf7, 0xda, 0x5e,
	0xf3, 0xe8, 0x3f, 0xb6, 0x47, 0x4c, 0x70, 0x8f, 0x6d, 0x5a, 0xd3, 0x27, 0x7f, 0xfd, 0x1d, 0x00,
	0x00, 0xff, 0xff, 0x95, 0xb5, 0x44, 0x6f, 0x0b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Nats service

type NatsClient interface {
	// 共处理方法
	ProcessCommonRequest(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	// 获取权限列表
	List(ctx context.Context, in *ListQuery, opts ...client.CallOption) (*Response, error)
	// 根据 唯一 获取权限
	Get(ctx context.Context, in *Nat, opts ...client.CallOption) (*Response, error)
	// 创建权限
	Create(ctx context.Context, in *Nat, opts ...client.CallOption) (*Response, error)
	// 更新权限
	Update(ctx context.Context, in *Nat, opts ...client.CallOption) (*Response, error)
	// 删除权限
	Delete(ctx context.Context, in *Nat, opts ...client.CallOption) (*Response, error)
}

type natsClient struct {
	c           client.Client
	serviceName string
}

func NewNatsClient(serviceName string, c client.Client) NatsClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "nats"
	}
	return &natsClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *natsClient) ProcessCommonRequest(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Nats.ProcessCommonRequest", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natsClient) List(ctx context.Context, in *ListQuery, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Nats.List", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natsClient) Get(ctx context.Context, in *Nat, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Nats.Get", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natsClient) Create(ctx context.Context, in *Nat, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Nats.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natsClient) Update(ctx context.Context, in *Nat, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Nats.Update", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *natsClient) Delete(ctx context.Context, in *Nat, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Nats.Delete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Nats service

type NatsHandler interface {
	// 共处理方法
	ProcessCommonRequest(context.Context, *Request, *Response) error
	// 获取权限列表
	List(context.Context, *ListQuery, *Response) error
	// 根据 唯一 获取权限
	Get(context.Context, *Nat, *Response) error
	// 创建权限
	Create(context.Context, *Nat, *Response) error
	// 更新权限
	Update(context.Context, *Nat, *Response) error
	// 删除权限
	Delete(context.Context, *Nat, *Response) error
}

func RegisterNatsHandler(s server.Server, hdlr NatsHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Nats{hdlr}, opts...))
}

type Nats struct {
	NatsHandler
}

func (h *Nats) ProcessCommonRequest(ctx context.Context, in *Request, out *Response) error {
	return h.NatsHandler.ProcessCommonRequest(ctx, in, out)
}

func (h *Nats) List(ctx context.Context, in *ListQuery, out *Response) error {
	return h.NatsHandler.List(ctx, in, out)
}

func (h *Nats) Get(ctx context.Context, in *Nat, out *Response) error {
	return h.NatsHandler.Get(ctx, in, out)
}

func (h *Nats) Create(ctx context.Context, in *Nat, out *Response) error {
	return h.NatsHandler.Create(ctx, in, out)
}

func (h *Nats) Update(ctx context.Context, in *Nat, out *Response) error {
	return h.NatsHandler.Update(ctx, in, out)
}

func (h *Nats) Delete(ctx context.Context, in *Nat, out *Response) error {
	return h.NatsHandler.Delete(ctx, in, out)
}
